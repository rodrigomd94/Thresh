function g(){return window.crypto.getRandomValues(new Uint32Array(1))[0]}function i(e,n=!1){const s=g(),a=`_${s}`;return Object.defineProperty(window,a,{value:r=>(n&&Reflect.deleteProperty(window,a),e==null?void 0:e(r)),writable:!1,configurable:!0}),s}async function c(e,n={}){return new Promise((s,a)=>{const r=i(d=>{s(d),Reflect.deleteProperty(window,`_${o}`)},!0),o=i(d=>{a(d),Reflect.deleteProperty(window,`_${r}`)},!0);window.__TAURI_IPC__({cmd:e,callback:r,error:o,...n})})}window.cardano={nami:{enable:async function(){return{getBalance:async()=>await t("get_balance"),getChangeAddress:()=>t("get_change_address"),getCollateral:()=>t("get_collateral"),getExtensions:()=>t("get_extensions"),getNetworkId:()=>t("get_network_id"),getRewardAddresses:()=>t("get_reward_addresses"),getUnusedAddresses:()=>t("get_unused_addresses"),getUsedAddresses:()=>t("get_used_addresses"),getUtxos:()=>t("get_utxos"),signData:(e,n)=>t("sign_data",e,n),signTx:e=>t("sign_tx",e),submitTx:e=>t("submit_tx",e)}}}};const t=async(e,...n)=>(console.log({params:n}),await c(e,n));
